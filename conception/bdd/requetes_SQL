DROP TABLE IF EXISTS PRODUITS ;
CREATE TABLE PRODUITS (id_produit INT AUTO_INCREMENT NOT NULL,
nom_produit VARCHAR(255),
descript_produit VARCHAR(255),
ingred_produit VARCHAR(255),
urlPhoto_produit VARCHAR(255),
urlPhotoPetite_produit VARCHAR(255),
calorie_100g FLOAT(10),
lipides_100g FLOAT(10),
glucides_100g FLOAT(10),
protéines_100g FLOAT(10),
sel_100g FLOAT(10),
id_NS INT NOT NULL,
id_portion INT NOT NULL,
id_quantitéProduit INT NOT NULL,
id_poidsProduits INT NOT NULL,
id_unité INT NOT NULL,
PRIMARY KEY (id_produit)) ENGINE=InnoDB;

DROP TABLE IF EXISTS UNITES ;
CREATE TABLE UNITES (id_unité INT AUTO_INCREMENT NOT NULL,
abrev_unité VARCHAR(10),
PRIMARY KEY (id_unité)) ENGINE=InnoDB;

DROP TABLE IF EXISTS CATEGORIES_PRODUITS ;
CREATE TABLE CATEGORIES_PRODUITS (id_catégorie INT AUTO_INCREMENT NOT NULL,
nom_catégorie VARCHAR(50),
PRIMARY KEY (id_catégorie)) ENGINE=InnoDB;

DROP TABLE IF EXISTS POIDS_PRODUIT ;
CREATE TABLE POIDS_PRODUIT (id_poidsProduits INT AUTO_INCREMENT NOT NULL,
valeur_poidsProduits FLOAT,
PRIMARY KEY (id_poidsProduits)) ENGINE=InnoDB;

DROP TABLE IF EXISTS ALLERGENES ;
CREATE TABLE ALLERGENES (id_allergènes INT AUTO_INCREMENT NOT NULL,
nom_allergène VARCHAR(50),
PRIMARY KEY (id_allergènes)) ENGINE=InnoDB;

DROP TABLE IF EXISTS QUANTITE_PRODUIT ;
CREATE TABLE QUANTITE_PRODUIT (id_quantitéProduit INT AUTO_INCREMENT NOT NULL,
valeur_quantitéProduit FLOAT,
PRIMARY KEY (id_quantitéProduit)) ENGINE=InnoDB;

DROP TABLE IF EXISTS ADDITIFS ;
CREATE TABLE ADDITIFS (id_additif INT AUTO_INCREMENT NOT NULL,
nom_additif VARCHAR(50),
PRIMARY KEY (id_additif)) ENGINE=InnoDB;

DROP TABLE IF EXISTS NUTRI_SCORE ;
CREATE TABLE NUTRI_SCORE (id_NS INT(2) AUTO_INCREMENT NOT NULL,
valeur_NS VARCHAR(5),
PRIMARY KEY (id_NS)) ENGINE=InnoDB;

DROP TABLE IF EXISTS PORTION ;
CREATE TABLE PORTION (id_portion INT AUTO_INCREMENT NOT NULL,
valeur_portion FLOAT,
PRIMARY KEY (id_portion)) ENGINE=InnoDB;

DROP TABLE IF EXISTS MEMBRES ;
CREATE TABLE MEMBRES (id_membre INT AUTO_INCREMENT NOT NULL,
pseudo_membre VARCHAR(50),
prenom_membre VARCHAR(50),
nom_membre VARCHAR(50),
password_membre VARCHAR(50),
email_membre VARCHAR(50),
dateNaissance_membre DATE,
poids_membre FLOAT(10),
taille_membre FLOAT(10),
dateInscription_membre DATETIME,
id_activité INT NOT NULL,
id_sexe INT NOT NULL,
PRIMARY KEY (id_membre)) ENGINE=InnoDB;

DROP TABLE IF EXISTS ACTIVITES ;
CREATE TABLE ACTIVITES (id_activité INT AUTO_INCREMENT NOT NULL,
nom_activité VARCHAR(50),
valeur_activité FLOAT(5),
PRIMARY KEY (id_activité)) ENGINE=InnoDB;

DROP TABLE IF EXISTS SEXE ;
CREATE TABLE SEXE (id_sexe INT AUTO_INCREMENT NOT NULL,
nom_sexe VARCHAR(20),
PRIMARY KEY (id_sexe)) ENGINE=InnoDB;

DROP TABLE IF EXISTS MENU ;
CREATE TABLE MENU (id_menu INT AUTO_INCREMENT NOT NULL,
nom_menu VARCHAR(50),
date_menu DATETIME,
id_membre INT NOT NULL,
PRIMARY KEY (id_menu)) ENGINE=InnoDB;

DROP TABLE IF EXISTS APPARTIENT ;
CREATE TABLE APPARTIENT (id_produit INT NOT NULL,
id_catégorie INT NOT NULL,
PRIMARY KEY (id_produit,
 id_catégorie)) ENGINE=InnoDB;

DROP TABLE IF EXISTS CONTIENT ;
CREATE TABLE CONTIENT (id_produit INT NOT NULL,
id_allergènes INT NOT NULL,
PRIMARY KEY (id_produit,
 id_allergènes)) ENGINE=InnoDB;

DROP TABLE IF EXISTS TRACES ;
CREATE TABLE TRACES (id_produit INT NOT NULL,
id_allergènes INT NOT NULL,
PRIMARY KEY (id_produit,
 id_allergènes)) ENGINE=InnoDB;

DROP TABLE IF EXISTS POSSEDE ;
CREATE TABLE POSSEDE (id_produit INT NOT NULL,
id_additif INT NOT NULL,
PRIMARY KEY (id_produit,
 id_additif)) ENGINE=InnoDB;

DROP TABLE IF EXISTS COMPOSE ;
CREATE TABLE COMPOSE (id_produit INT NOT NULL,
id_menu INT NOT NULL,
valeur_nbrePortion FLOAT(10),
PRIMARY KEY (id_produit,
 id_menu)) ENGINE=InnoDB;

DROP TABLE IF EXISTS FAVORIS ;
CREATE TABLE FAVORIS (id_produit INT NOT NULL,
id_membre INT NOT NULL,
PRIMARY KEY (id_produit,
 id_membre)) ENGINE=InnoDB;

ALTER TABLE PRODUITS ADD CONSTRAINT FK_PRODUITS_id_NS FOREIGN KEY (id_NS) REFERENCES NUTRI_SCORE (id_NS);

ALTER TABLE PRODUITS ADD CONSTRAINT FK_PRODUITS_id_portion FOREIGN KEY (id_portion) REFERENCES PORTION (id_portion);
ALTER TABLE PRODUITS ADD CONSTRAINT FK_PRODUITS_id_quantitéProduit FOREIGN KEY (id_quantitéProduit) REFERENCES QUANTITE_PRODUIT (id_quantitéProduit);
ALTER TABLE PRODUITS ADD CONSTRAINT FK_PRODUITS_id_poidsProduits FOREIGN KEY (id_poidsProduits) REFERENCES POIDS_PRODUIT (id_poidsProduits);
ALTER TABLE PRODUITS ADD CONSTRAINT FK_PRODUITS_id_unité FOREIGN KEY (id_unité) REFERENCES UNITES (id_unité);
ALTER TABLE MEMBRES ADD CONSTRAINT FK_MEMBRES_id_activité FOREIGN KEY (id_activité) REFERENCES ACTIVITES (id_activité);
ALTER TABLE MEMBRES ADD CONSTRAINT FK_MEMBRES_id_sexe FOREIGN KEY (id_sexe) REFERENCES SEXE (id_sexe);
ALTER TABLE MENU ADD CONSTRAINT FK_MENU_id_membre FOREIGN KEY (id_membre) REFERENCES MEMBRES (id_membre);
ALTER TABLE APPARTIENT ADD CONSTRAINT FK_APPARTIENT_id_produit FOREIGN KEY (id_produit) REFERENCES PRODUITS (id_produit);
ALTER TABLE APPARTIENT ADD CONSTRAINT FK_APPARTIENT_id_catégorie FOREIGN KEY (id_catégorie) REFERENCES CATEGORIES_PRODUITS (id_catégorie);
ALTER TABLE CONTIENT ADD CONSTRAINT FK_CONTIENT_id_produit FOREIGN KEY (id_produit) REFERENCES PRODUITS (id_produit);
ALTER TABLE CONTIENT ADD CONSTRAINT FK_CONTIENT_id_allergènes FOREIGN KEY (id_allergènes) REFERENCES ALLERGENES (id_allergènes);
ALTER TABLE TRACES ADD CONSTRAINT FK_TRACES_id_produit FOREIGN KEY (id_produit) REFERENCES PRODUITS (id_produit);
ALTER TABLE TRACES ADD CONSTRAINT FK_TRACES_id_allergènes FOREIGN KEY (id_allergènes) REFERENCES ALLERGENES (id_allergènes);
ALTER TABLE POSSEDE ADD CONSTRAINT FK_POSSEDE_id_produit FOREIGN KEY (id_produit) REFERENCES PRODUITS (id_produit);
ALTER TABLE POSSEDE ADD CONSTRAINT FK_POSSEDE_id_additif FOREIGN KEY (id_additif) REFERENCES ADDITIFS (id_additif);
ALTER TABLE COMPOSE ADD CONSTRAINT FK_COMPOSE_id_produit FOREIGN KEY (id_produit) REFERENCES PRODUITS (id_produit);
ALTER TABLE COMPOSE ADD CONSTRAINT FK_COMPOSE_id_menu FOREIGN KEY (id_menu) REFERENCES MENU (id_menu);
ALTER TABLE FAVORIS ADD CONSTRAINT FK_FAVORIS_id_produit FOREIGN KEY (id_produit) REFERENCES PRODUITS (id_produit);
ALTER TABLE FAVORIS ADD CONSTRAINT FK_FAVORIS_id_membre FOREIGN KEY (id_membre) REFERENCES MEMBRES (id_membre);
